<?php
/**
 * Created by PhpStorm.
 * User: 江艺勤
 * Date: 2020/12/10
 * Time: 11:06
 */
namespace cncn\insurance\cicp\service;
use cncn\insurance\common\InsuranceException;
use cncn\insurance\cicp\service\CICPInsuranceGateway;
use erp\util\UUIDGenerator;

/**
 * 投保
 * Class Booking
 * @package cncn\insurance\cicp\service
 */
class Booking extends CICPInsuranceGateway
{
    /**
     * 当前接口方法
     * @return string
     */
    protected function getMethod()
    {
        return 'Booking';
    }
    /**
     * 投保接口地址
     * @return string
     */
    protected function getService()
    {
        return 'CIC001';
    }

    /**
     *  组装投保报文
     * @param array $data
     * @return string
     */
    protected function dealRequestBody($data = [])
    {
        //接口交易码
        $transrno = $this->getService();
        //被保人员报文
        $insuredTouristStr = $this->dealInsuredTourist($data['insuredTourists']);
        //整体报文
        $xml = <<<XML
<?xml version="1.0" encoding="GBK"?>
<INSUREQ>
    <HEAD>
        <TRANSRNO>{$transrno}</TRANSRNO>
        <PARTNERCODE>{$this->config['GW_CH_CODE']}</PARTNERCODE>
        <PARTNERSUBCODE>{$this->config['GW_CH_CODE']}</PARTNERSUBCODE>
        <ASYNC>0</ASYNC>
    </HEAD>
    <MAIN>
        <USERCODE/>
        <OTHERPAYID/>
        <PRODUCTCODE>{$data['productCode']}</PRODUCTCODE>
        <SERIALNUMBER>{$data['transNo']}</SERIALNUMBER>
        <TRANSRDATE>{$data['transDateTime']}</TRANSRDATE>
        <PRODUCTUNIT>{$data['productNum']}</PRODUCTUNIT>
        <EFFDATE>{$data['beginDateTime']}</EFFDATE>
        <TERMDATE>{$data['endDateTime']}</TERMDATE>
        <CATALOGPREMIUM>{$data['totalPremium']}</CATALOGPREMIUM>
        <RCV_AMT></RCV_AMT>
        <BBRUNIT>{$data['insuredNum']}</BBRUNIT>
        <PRNNO/>
        <POLICYFLAG/>
        <OLDPOLICYNO/>
    </MAIN>
    <HEALPOLICYINFO>
        <TBR>
            <TBRNAME>{$data['tbrName']}</TBRNAME>
            <TBRSEX/>
            <TBRIDTYPE>26</TBRIDTYPE>
            <TBRNATURE>5</TBRNATURE>
            <TBRIDNO>{$data['tbrIdNo']}</TBRIDNO>
            <TBRBIRTH/>
            <TBRADDR/>
            <TBRPOSTCODE/>
            <TBRTEL/>
            <TBRMOBILE/>
            <TBREMAIL/>
            <TBRBBRRELATION>99</TBRBBRRELATION>
            <PROVINCE/>
            <PREFECTURE/>
            <COUNTY/>
            <IDENTIFYPERIODFLAG/>
            <IDENTIFYPERIODSTART/>
            <IDENTIFYPERIODEND/>
        </TBR>
        <BBRS>
            {$insuredTouristStr}
        </BBRS>
        <TRAVEL>
            <GROUPNO/>
            <COUNTRYCODE/>
            <COUNTRYNAME/>
            <LINE>{$data['lineName']}</LINE>
        </TRAVEL>
    </HEALPOLICYINFO>
</INSUREQ>
XML;
        return $xml;
    }


    /**
     * 组装被保险人信息
     * @param $tourists
     * @return string
     */
    private function dealInsuredTourist($tourists)
    {
        $insuredStr = '';
        foreach($tourists as $tourist) {
            $insuredStr .= <<<INSURED_XML
<BBR>
    <BBRNAME>{$tourist['insured_username']}</BBRNAME>
    <BBRSEX>{$tourist['insured_sex']}</BBRSEX>
    <BBRBIRTH/>
    <BBRIDTYPE>{$tourist['insured_card_type']}</BBRIDTYPE>
    <BBRIDNO>{$tourist['insured_card_no']}</BBRIDNO>
    <BBRADDR/>
    <BBRPOSTCODE/>
    <BBRTEL/>
    <BBRMOBILE/>
    <BBREMAIL/>
    <BBRWORKCODE/>
    <BBRCATEGORY/>
    <BENIFITMARK>N</BENIFITMARK>
    <SCHOOLNAME/>
    <CLASS/>
    <STUDENTID/>
</BBR>
INSURED_XML;
        }

        return $insuredStr;
    }

    /**
     * 投保请求
     * @param array $options
     * @return null
     */
    public function request(array $options)
    {
        return parent::request($options); // TODO: Change the autogenerated stub
    }

    /**
     * 投保参数校验
     * @param array $options
     * @return array
     */
    protected function checkOptions(array $options = [])
    {
        if(empty($options['productCode'])){
            throw new InsuranceException('投保产品代码为空');
        }

        if(empty($options['transNo'])){
            throw new InsuranceException('唯一业务流水号为空');
        }

        if(!$this->checkDateTime($options['transDateTime'])){
            throw new InsuranceException('撤销时间不合法');
        }

        if(empty($options['productNum'])){
            throw new InsuranceException('投保份数为空');
        }

        if(!$this->checkDateTime($options['beginDateTime'])){
            throw new InsuranceException('起保时间为空');
        }

        if(!$this->checkDateTime($options['endDateTime'])){
            throw new InsuranceException('终保时间为空');
        }

        if(strtotime($options['beginDateTime']) >= strtotime($options['endDateTime'])){
            throw new InsuranceException('起保时间不能大于终保时间');
        }

        if(empty($options['totalPremium'])){
            throw new InsuranceException('保费不能为空');
        }

        if(empty($options['insuredNum'])){
            throw new InsuranceException('被保人数不能为空');
        }

        if(empty($options['tbrName'])){
            throw new InsuranceException('投保人名称为空');
        }

        if(empty($options['tbrIdNo'])){
            throw new InsuranceException('投保人社会信用代码为空');
        }

        if(strlen($options['tbrIdNo']) != 18){
            throw new InsuranceException('投保人社会信用代码必须是18位数字');
        }

        if(empty($options['lineName'])){
            throw new InsuranceException('旅游路线不能为空');
        }

        if(!$options['insuredTourists']){
            throw new InsuranceException('被保人员不能为空');
        }

        if(count($options['insuredTourists']) != $options['insuredNum']){
            throw new InsuranceException('被保总人数和名单人数不相等');
        }

        foreach($options['insuredTourists'] as $key => $tourist)
        {
            $index = $key + 1;
            if(empty($tourist['insured_username'])){
                throw new InsuranceException("第{$index}个被保人员姓名不能为空");
            }

            if(!in_array($tourist['insured_sex'], [1, 2, 3])){
                throw new InsuranceException("第{$index}个被保人员性别参数不合法");
            }

            if($tourist['insured_card_type'] < 1 || $tourist['insured_card_type'] > 25 && !in_array($tourist['insured_card_type'], ['53', '99'])){
                throw new InsuranceException("第{$index}个被保人员证件类型不合法");
            }

            if(empty($tourist['insured_card_no'])){
                throw new InsuranceException("第{$index}个被保人员证件号码不能为空");
            }
        }
    }
}